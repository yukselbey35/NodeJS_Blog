//Start to use nodejs npmjs to install express framework 
//to initialize nmp=npm init
//then install express packs=npm install express
//install dependencies =npm install
//nodemon is a tool that helps develop node.js based applications by automatically restarting the node application when file changes in the directory are detected.
//install nodemon as a development dependency= npm nodemon --save-dev
//install nodemon as a global dependency =npm install -g nodemon

// use the following code to serve images, CSS files, and JavaScript files in a directory named public:
app.use(express.static('public'))

//Start to use nodejs npmjs to install express framework =npm install express
//After the change scripts run = npm run boot or nodemon app

  "scripts": {
    "boot": "nodemon app.js" 
  },

//Use template engine to prevent repeat ourself
=npm install express-handlebars
 //We created views folder from https://www.npmjs.com/package/express-handlebars with same structure. 
 views/layouts/main.handlebars *we are using index.handlebars instead of main.handlebars

//Created partials folder and in the partials we made website-footer.handlebars, 
//website-header.handlebars, website-nav.handlebars, 

//created index.handlebars, about.handlebars, blog.handlebars, contact.handlebars, in the website folder

/* Type "/" instead of index.html in website-nav-handlebars*/

Adding routing for every handlebars
//Creates a super simple Express app which shows the basic way to register 
//a Handlebars view engine using this package.
app.engine('handlebars', exphbs())
app.set('view engine', 'handlebars')

//to install database = npm install mongoose


app.get('/', (req, res)=>{
    res.render('website/index')
})

app.get('/about.html', (req, res)=>{
    res.render('website/about')
})

app.get('/blog.html', (req, res)=>{
    res.render('website/blog')
})


app.get('/contact.html', (req, res)=>{
    res.render('website/contact')
})


app.get('/login.html', (req, res)=>{
    res.render('website/login')
})
